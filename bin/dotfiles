#!/bin/bash

DOTFILES_DIRECTORY="${HOME}/.dotfiles"

cd ${DOTFILES_DIRECTORY}

source ./lib/help
source ./lib/utils
source ./lib/brew

# Help text
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    run_help
    exit
fi

for opt in $@
do
    case $opt in
        --skip-pkg) skip_pkg=true ;;
        --skip-sync) skip_sync=true ;;
        -*|--*) p_warning "Warning: invalid option $opt" ;;
    esac
done

if ! [[ $skip_pkg ]]; then
    if ! type_exists 'brew'; then
        p_header "Installing Homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi

    run_brew
fi

link() {
    ln -fs "${DOTFILES_DIRECTORY}/${1}" "${HOME}/${2}"
}

mirrorfiles() {
    rsync -avz --quiet ${DOTFILES_DIRECTORY}/shell/.config ${HOME}

    link "shell/.config/fish/config.fish"  ".config/fish/config.fish"
    link "shell/.config/fish/fish_plugins" ".config/fish/fish_plugins"
}

mirrorfiles

if [ ! -f ~/.config/fish/functions/fisher.fish ]; then
    p_header "- Installing Fisher"
    /bin/bash -c "$(curl https://git.io/fisher --create-dirs -sLo ~/.config/fish/functions/fisher.fish)"
fi

if ! type_exists 'rustup'; then
    p_header "- Installing Rust"
    /bin/bash -c "$(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh)"
fi

if [ ! -d ~/.cargo-target ]; then
    mkdir "${HOME}/.cargo-target"
fi
